{"version":3,"sources":["services/history.ts","redux/movie-actions.ts","redux/movie-reducer.ts","redux/movie-saga.ts","redux/store.ts","components/search-bar.tsx","components/movie-box.tsx","components/spinner.tsx","pages/movie-search-container.ts","pages/movie-search-page.tsx","pages/movie-detail-container.tsx","pages/movie-detail-page.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["history","createBrowserHistory","basename","movieSearchFactory","actionCreatorFactory","SET_SEARCH","SET_PAGE","FETCH_SEARCH_MOVIES","BEGIN","ERROR","SUCCESS","FETCH_MOVIE_DETAIL","movieReducer","reducerWithInitialState","search","page","loading","movieThumbnails","movieDetail","case","state","payload","produce","draft","cases","movieRootSaga","nextPage","setSearch","debouncedSearch","fetchSearchMovies","fetchMovieDetail","fork","takeLatest","type","action","select","movies","query","put","task","take","length","cancel","delay","call","fetch","response","json","Error","mapped","Search","map","raw","id","imdbID","name","Title","year","Number","Year","posterUrl","Poster","alert","push","detail","title","genre","Genre","released","Released","poster","plot","Plot","reducers","combineReducers","sagas","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","undefined","applyMiddleware","logger","run","SearchBar","props","className","inputClassName","value","placeholder","disabled","onChange","e","target","MovieBox","to","src","alt","Spinner","width","height","viewBox","xmlns","fill","fillRule","transform","stroke","strokeWidth","cx","cy","r","fillOpacity","attributeName","begin","dur","values","calcMode","repeatCount","MovieSearchContainer","connect","d","setSearchText","s","setPage","p","onClick","movie","key","MovieDetailContainer","match","params","fetchMovie","React","useEffect","dateTime","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18dc51f7.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\n\r\nexport const history = createBrowserHistory({basename: '/omdb-frontend'})\r\n","import { actionCreatorFactory } from 'typescript-fsa'\r\n\r\nimport { IMovieThumbnail, IMovieDetail } from './movie-reducer'\r\n\r\nconst movieSearchFactory = actionCreatorFactory('movie-search')\r\n\r\nexport const SET_SEARCH = movieSearchFactory<string>('set-search')\r\n\r\nexport const SET_PAGE = movieSearchFactory<number>('set-page')\r\n\r\nexport const FETCH_SEARCH_MOVIES = {\r\n    BEGIN: movieSearchFactory<{query: string, page: number}>('BEGIN_FETCH_SEARCH_MOVIES'),\r\n    ERROR: movieSearchFactory<Error>('ERROR_FETCH_SEARCH_MOVIES'),\r\n    SUCCESS: movieSearchFactory<IMovieThumbnail[] | null>('SUCCESS_FETCH_SEARCH_MOVIES')\r\n}\r\n\r\nexport const FETCH_MOVIE_DETAIL = {\r\n    BEGIN: movieSearchFactory<{id: string}>('BEGIN_FETCH_MOVIE_DETAIL'),\r\n    ERROR: movieSearchFactory<Error>('ERROR_FETCH_MOVIE_DETAIL'),\r\n    SUCCESS: movieSearchFactory<IMovieDetail | null>('SUCCESS_FETCH_MOVIE_DETAIL')\r\n}\r\n","import { reducerWithInitialState } from 'typescript-fsa-reducers'\r\nimport produce from 'immer'\r\n\r\nimport { SET_SEARCH, FETCH_SEARCH_MOVIES, SET_PAGE, FETCH_MOVIE_DETAIL } from './movie-actions'\r\nimport { IApplicationStore } from './store'\r\n\r\nexport interface IMovieState {\r\n    search: string\r\n    loading: boolean\r\n    page: number\r\n    movieThumbnails: IMovieThumbnail[] | null\r\n\r\n    movieDetail: IMovieDetail | null\r\n}\r\n\r\nexport interface IMovieThumbnail {\r\n    name: string\r\n    posterUrl: string\r\n    year: number\r\n    id: string\r\n}\r\n\r\nexport interface IMovieDetail {\r\n    title: string\r\n    year: number\r\n    released: string\r\n    genre: string\r\n    poster: string\r\n    plot: string\r\n}\r\n\r\nconst initial: IMovieState = {\r\n    search: '',\r\n    page: 1,\r\n    loading: false,\r\n    movieThumbnails: [],\r\n    movieDetail: null\r\n}\r\n\r\nexport const movieReducer = reducerWithInitialState(initial)\r\n    .case(SET_SEARCH, (state, payload) => produce(state, draft => {\r\n        draft.search = payload\r\n        draft.movieThumbnails = []\r\n        draft.page = 1\r\n    }))\r\n    .case(SET_PAGE, (state, payload) => produce(state, draft => {\r\n        draft.page = payload\r\n    }))\r\n    .case(FETCH_SEARCH_MOVIES.SUCCESS, (state, payload) => produce(state, draft => {\r\n        draft.movieThumbnails = payload\r\n        draft.loading = false\r\n    }))\r\n    .case(FETCH_MOVIE_DETAIL.SUCCESS, (state, payload) => produce(state, draft => {\r\n        draft.movieDetail = payload\r\n        draft.loading = false\r\n    }))\r\n    .case(FETCH_MOVIE_DETAIL.BEGIN, (state, payload) => produce(state, draft => {\r\n        draft.loading = false\r\n        draft.movieDetail = null\r\n    }))\r\n\r\n    .cases([FETCH_SEARCH_MOVIES.BEGIN], (state, payload) => produce(state, draft => {\r\n        draft.loading = true\r\n    }))\r\n    .cases([FETCH_SEARCH_MOVIES.ERROR, FETCH_MOVIE_DETAIL.ERROR], (state, payload) => produce(state, draft => {\r\n        draft.loading = false\r\n    }))\r\n\r\nexport const selectCurrentSearchQuery = () => (state: IApplicationStore) => state.movies.search","import { take, fork, cancel, delay, call, put, takeLatest, select } from 'redux-saga/effects'\r\n\r\nimport { SET_SEARCH, FETCH_SEARCH_MOVIES, SET_PAGE, FETCH_MOVIE_DETAIL } from './movie-actions'\r\nimport { Action } from 'typescript-fsa'\r\nimport { IMovieThumbnail, selectCurrentSearchQuery, IMovieDetail } from './movie-reducer'\r\nimport { history } from '../services/history'\r\n\r\nexport function* movieRootSaga() {\r\n  yield fork(setSearch)\r\n\r\n  yield takeLatest(FETCH_SEARCH_MOVIES.BEGIN.type, fetchSearchMovies)\r\n  yield takeLatest(FETCH_MOVIE_DETAIL.BEGIN.type, fetchMovieDetail)\r\n  yield takeLatest(SET_PAGE.type, nextPage)\r\n}\r\n\r\nfunction* nextPage(action: Action<number>) {\r\n  const query = yield select(selectCurrentSearchQuery())\r\n\r\n  yield put(FETCH_SEARCH_MOVIES.BEGIN({query, page: action.payload}))\r\n}\r\n\r\nfunction* setSearch() {\r\n  let task = null\r\n  while (true) {\r\n    const { payload } = yield take(SET_SEARCH.type)\r\n    if (payload.length < 5) {\r\n      continue\r\n    }\r\n    if (task) {\r\n      yield cancel(task)\r\n    }\r\n    task = yield fork(debouncedSearch, payload)\r\n  }\r\n}\r\n\r\nfunction* debouncedSearch(search: string) {\r\n  yield delay(1200)\r\n  yield put(FETCH_SEARCH_MOVIES.BEGIN({query: search, page: 1}))\r\n}\r\n\r\nfunction* fetchSearchMovies(action: Action<{query: string, page: number}>) {\r\n  try {\r\n\r\n    const response = yield call(fetch, `https://www.omdbapi.com/?s=${action.payload.query}&page=${action.payload.page}&apikey=82342796`)\r\n    const json = yield response.json()\r\n    if (json.Error) {\r\n      yield put(FETCH_SEARCH_MOVIES.SUCCESS(null))\r\n      return\r\n    }\r\n\r\n    const mapped = json.Search.map((raw: any) => ({\r\n      id: raw.imdbID,\r\n      name: raw.Title,\r\n      year: Number(raw.Year),\r\n      posterUrl: raw.Poster === 'N/A' ? null : raw.Poster\r\n    }) as IMovieThumbnail)\r\n\r\n    yield put(FETCH_SEARCH_MOVIES.SUCCESS(mapped))\r\n  } catch(e) {\r\n    yield put(FETCH_SEARCH_MOVIES.ERROR(e))\r\n  }\r\n}\r\n\r\nfunction* fetchMovieDetail(action: Action<{id: string}>) {\r\n  try {\r\n    const response: Response = yield call(fetch, `https://www.omdbapi.com/?apikey=82342796&i=${action.payload.id}`)\r\n\r\n    const json = yield response.json()\r\n\r\n    if (json.Error) {\r\n      yield put(FETCH_MOVIE_DETAIL.SUCCESS(null))\r\n      alert(`Unable to display page (${json.Error})`)\r\n      history.push('/')\r\n      return\r\n    }\r\n\r\n    const detail: IMovieDetail = {\r\n      title: json.Title,\r\n      genre: json.Genre,\r\n      released: json.Released,\r\n      year: Number(json.Year),\r\n      poster: json.Poster,\r\n      plot: json.Plot\r\n    }\r\n\r\n    yield put(FETCH_MOVIE_DETAIL.SUCCESS(detail))\r\n  } catch (e) {\r\n    yield put(FETCH_MOVIE_DETAIL.ERROR(e))\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { fork } from 'redux-saga/effects'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport logger from 'redux-logger'\r\n\r\nimport { IMovieState, movieReducer } from './movie-reducer'\r\nimport { movieRootSaga } from './movie-saga'\r\n\r\nexport interface IApplicationStore {\r\n    movies: IMovieState\r\n}\r\n\r\nconst reducers = combineReducers({\r\n    movies: movieReducer\r\n})\r\n\r\nconst sagas = function* rootSaga() {\r\n    yield fork(movieRootSaga)\r\n}\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nexport const store = createStore(reducers, undefined, applyMiddleware(logger, sagaMiddleware))\r\n\r\nsagaMiddleware.run(sagas)\r\n","import React from 'react'\r\n\r\nimport './search-bar.scss';\r\n\r\ninterface IProps {\r\n  value: string\r\n  inputClassName?: string\r\n  placeholder?: string;\r\n  disabled?: boolean\r\n  onChange: (s: string) => void\r\n}\r\n\r\nexport const SearchBar = (props: IProps) => {\r\n  return <div className='search-bar'>\r\n    <input\r\n      className={`input ${props.inputClassName || ''}`}\r\n      type='text'\r\n      value={props.value}\r\n      placeholder={props.placeholder}\r\n      disabled={props.disabled}\r\n      onChange={e => !props.disabled && props.onChange(e.target.value)}\r\n    />\r\n  </div>\r\n}\r\n","import React from 'react'\r\n\r\nimport './movie-box.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\ninterface IProps {\r\n    name: string\r\n    posterUrl: string\r\n    id: string\r\n}\r\n\r\nexport const MovieBox = (props: IProps) => {\r\n    return <div className='movie-box box'>\r\n        <Link to={`/movie/${props.id}`}>\r\n            <div>\r\n                <strong>{props.name}</strong>\r\n            </div>\r\n            <div className=''>\r\n                <img src={props.posterUrl} alt='Poster' />\r\n            </div>\r\n        </Link>\r\n    </div>\r\n}","import React from 'react'\r\n\r\nexport const Spinner = () => {\r\n  // <!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->\r\n  return <svg width=\"58\" height=\"58\" viewBox=\"0 0 58 58\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g fill=\"#ddd\" fillRule=\"evenodd\">\r\n      <g transform=\"translate(2 1)\" stroke=\"#FFF\" strokeWidth=\"1.5\">\r\n        <circle cx=\"42.601\" cy=\"11.462\" r=\"5\" fillOpacity=\"1\" fill=\"#fff\">\r\n          <animate attributeName=\"fill-opacity\"\r\n            begin=\"0s\" dur=\"1.3s\"\r\n            values=\"1;0;0;0;0;0;0;0\" calcMode=\"linear\"\r\n            repeatCount=\"indefinite\" />\r\n        </circle>\r\n        <circle cx=\"49.063\" cy=\"27.063\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\r\n          <animate attributeName=\"fill-opacity\"\r\n            begin=\"0s\" dur=\"1.3s\"\r\n            values=\"0;1;0;0;0;0;0;0\" calcMode=\"linear\"\r\n            repeatCount=\"indefinite\" />\r\n        </circle>\r\n        <circle cx=\"42.601\" cy=\"42.663\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\r\n          <animate attributeName=\"fill-opacity\"\r\n            begin=\"0s\" dur=\"1.3s\"\r\n            values=\"0;0;1;0;0;0;0;0\" calcMode=\"linear\"\r\n            repeatCount=\"indefinite\" />\r\n        </circle>\r\n        <circle cx=\"27\" cy=\"49.125\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\r\n          <animate attributeName=\"fill-opacity\"\r\n            begin=\"0s\" dur=\"1.3s\"\r\n            values=\"0;0;0;1;0;0;0;0\" calcMode=\"linear\"\r\n            repeatCount=\"indefinite\" />\r\n        </circle>\r\n        <circle cx=\"11.399\" cy=\"42.663\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\r\n          <animate attributeName=\"fill-opacity\"\r\n            begin=\"0s\" dur=\"1.3s\"\r\n            values=\"0;0;0;0;1;0;0;0\" calcMode=\"linear\"\r\n            repeatCount=\"indefinite\" />\r\n        </circle>\r\n        <circle cx=\"4.938\" cy=\"27.063\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\r\n          <animate attributeName=\"fill-opacity\"\r\n            begin=\"0s\" dur=\"1.3s\"\r\n            values=\"0;0;0;0;0;1;0;0\" calcMode=\"linear\"\r\n            repeatCount=\"indefinite\" />\r\n        </circle>\r\n        <circle cx=\"11.399\" cy=\"11.462\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\r\n          <animate attributeName=\"fill-opacity\"\r\n            begin=\"0s\" dur=\"1.3s\"\r\n            values=\"0;0;0;0;0;0;1;0\" calcMode=\"linear\"\r\n            repeatCount=\"indefinite\" />\r\n        </circle>\r\n        <circle cx=\"27\" cy=\"5\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\r\n          <animate attributeName=\"fill-opacity\"\r\n            begin=\"0s\" dur=\"1.3s\"\r\n            values=\"0;0;0;0;0;0;0;1\" calcMode=\"linear\"\r\n            repeatCount=\"indefinite\" />\r\n        </circle>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n}","import { connect } from \"react-redux\"\r\nimport { Dispatch } from \"redux\"\r\n\r\nimport { IApplicationStore } from \"../redux/store\"\r\nimport { MovieSearchPage } from \"./movie-search-page\"\r\nimport { SET_SEARCH, SET_PAGE } from \"../redux/movie-actions\"\r\n\r\ntype IStateProps = ReturnType<typeof mapStateToProps>\r\ntype IDispatchProps = ReturnType<typeof mapDispatchToProps>\r\ntype IOwnProps = {}\r\n\r\nexport type IMovieSearchProps =  IStateProps & IDispatchProps & IOwnProps\r\n\r\nconst mapStateToProps = (state: IApplicationStore) => ({\r\n  ...state.movies\r\n})\r\n\r\nconst mapDispatchToProps = (d: Dispatch) => ({\r\n  setSearchText: (s: string) => d(SET_SEARCH(s)),\r\n  setPage: (p: number) => d(SET_PAGE(p))\r\n})\r\n\r\nexport const MovieSearchContainer =\r\n  connect<IStateProps, IDispatchProps, IOwnProps, IApplicationStore>(mapStateToProps, mapDispatchToProps)(MovieSearchPage)\r\n","import React from 'react'\r\n\r\nimport { IMovieSearchProps } from './movie-search-container'\r\nimport { SearchBar } from '../components/search-bar'\r\nimport { MovieBox } from '../components/movie-box'\r\nimport { Spinner } from '../components/spinner'\r\n\r\nimport './movie-search-page.scss'\r\n\r\nexport const MovieSearchPage = (props: IMovieSearchProps) => {\r\n  return <div className='movies-search-page'>\r\n    <section className=\"hero is-info\">\r\n      <div className=\"hero-body\">\r\n        <div className=\"container\">\r\n          <div className=\"card\">\r\n            <div className=\"card-content\">\r\n              <div className=\"content\">\r\n                <div className=\"control\">\r\n                  <SearchBar\r\n                    value={props.search}\r\n                    inputClassName={`is-large ${props.movieThumbnails === null ? 'is-danger' : ''}`}\r\n                    placeholder='Enter movie title'\r\n                    onChange={props.setSearchText}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n\r\n    <section className='container movie-box-container'>\r\n      {!props.loading &&\r\n        props.movieThumbnails &&\r\n        !!props.movieThumbnails.length &&\r\n        props.page > 1 &&\r\n        <button className='button primary next-button'\r\n          onClick={() => props.setPage(props.page - 1)}\r\n        >Prev &larr;</button>}\r\n      &nbsp;\r\n      {!props.loading &&\r\n        props.movieThumbnails &&\r\n        !!props.movieThumbnails.length &&\r\n        <button className='button primary next-button'\r\n          onClick={() => props.setPage(props.page + 1)}\r\n        >Next &rarr;</button>}\r\n\r\n\r\n\r\n      {props.loading && <Spinner />}\r\n      <div className=\"columns is-multiline\">\r\n\r\n        {!props.loading &&\r\n          props.movieThumbnails &&\r\n          props.movieThumbnails.map(movie =>\r\n            <div className='column is-mobile-full is-one-fifth' key={movie.id}>\r\n              <MovieBox\r\n                name={movie.name}\r\n                id={movie.id}\r\n                posterUrl={movie.posterUrl}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n      </div>\r\n    </section>\r\n  </div>\r\n}\r\n","import { connect } from \"react-redux\"\r\nimport { Dispatch } from \"redux\"\r\n\r\nimport { IApplicationStore } from \"../redux/store\"\r\nimport { MovieDetailPage } from \"./movie-detail-page\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { FETCH_MOVIE_DETAIL } from \"../redux/movie-actions\"\r\n\r\ntype IStateProps = ReturnType<typeof mapStateToProps>\r\ntype IDispatchProps = ReturnType<typeof mapDispatchToProps>\r\ntype IOwnProps = {} & RouteComponentProps<{id: string}>\r\n\r\nexport type IMovieDetailProps =  IStateProps & IDispatchProps & IOwnProps\r\n\r\nconst mapStateToProps = (state: IApplicationStore, props: IOwnProps) => ({\r\n  id: props.match.params.id,\r\n  movie: state.movies.movieDetail,\r\n  loading: state.movies.loading\r\n})\r\n\r\nconst mapDispatchToProps = (d: Dispatch) => ({\r\n  fetchMovie: (id: string) => d(FETCH_MOVIE_DETAIL.BEGIN({id}))\r\n})\r\n\r\nexport const MovieDetailContainer =\r\n  connect<IStateProps, IDispatchProps, IOwnProps, IApplicationStore>(mapStateToProps, mapDispatchToProps)(MovieDetailPage)","import React from 'react'\r\nimport { IMovieDetailProps } from './movie-detail-container'\r\nimport { Spinner } from '../components/spinner'\r\n\r\nexport const MovieDetailPage = ({\r\n  id,\r\n  movie,\r\n  loading,\r\n\r\n  fetchMovie\r\n}: IMovieDetailProps) => {\r\n\r\n  React.useEffect(() => {\r\n    fetchMovie(id)\r\n  }, [id, fetchMovie])\r\n\r\n  return <div className='container '>\r\n    <div className='columns'>\r\n      <div className='column is-4' />\r\n      {loading && <div className='column is-4'>\r\n        <Spinner />\r\n      </div>\r\n      }\r\n      {!loading && <div className='card column is-4'>\r\n        <div className='card-image'>\r\n          <figure className='image is-3by4'>\r\n            <img src={movie?.poster} alt='Poster' />\r\n          </figure>\r\n        </div>\r\n        <div className='card-content'>\r\n          <div className='media'>\r\n            <div className='media-content'>\r\n              <p className='title is-4'>{movie?.title}</p>\r\n              <p className='subtitle'>{movie?.year}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='content'>\r\n            <p>{movie?.genre}</p>\r\n            <p>{movie?.plot}</p>\r\n            <br />\r\n            <time dateTime='2016-1-1'>{movie?.released}</time>\r\n          </div>\r\n        </div>\r\n      </div>}\r\n    </div>\r\n  </div>\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { Router, Switch, Route } from 'react-router-dom'\r\nimport { history } from './services/history'\r\n\r\nimport { store } from './redux/store'\r\nimport { MovieSearchContainer } from './pages/movie-search-container'\r\nimport { MovieDetailContainer } from './pages/movie-detail-container'\r\n\r\nconst App = () => {\r\n  return <Provider store={store}>\r\n    <div className='page'>\r\n      <section>\r\n        <h1 className='is-size-1'>OMDB - Demo app</h1>\r\n      </section>\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path='/' exact={true} component={MovieSearchContainer} />\r\n          <Route path='/movie/:id' exact={true} component={MovieDetailContainer} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  </Provider>\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react'\r\nimport * as ReactDOM from 'react-dom'\r\n\r\nimport App from './app'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nimport './styles/main.scss'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}