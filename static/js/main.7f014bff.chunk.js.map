{"version":3,"sources":["services/history.ts","redux/movie-actions.ts","const.ts","redux/movie-reducer.ts","services/local-storage.ts","redux/movie-saga.ts","redux/store.ts","components/search-bar.tsx","components/movie-box.tsx","components/spinner.tsx","pages/movie-search-container.ts","pages/movie-search-page.tsx","pages/movie-detail-container.tsx","pages/movie-detail-page.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["history","createBrowserHistory","basename","movieActionFactory","actionCreatorFactory","SET_SEARCH","SET_PAGE","FETCH_SEARCH_MOVIES","BEGIN","ERROR","SUCCESS","FETCH_MOVIE_DETAIL","SET_MOVIE_FAVOURITE","RESET_MOVIE_FAVOURITE","console","log","process","TEST_VAL","initial","search","page","loading","movieThumbnails","movieDetail","favourites","key","json","localStorage","getItem","JSON","parse","lsget","movieReducer","reducerWithInitialState","case","state","payload","produce","draft","push","movie","splice","findIndex","v","id","movieId","cases","movieRootSaga","nextPage","setSearch","debouncedSearch","fetchSearchMovies","fetchMovieDetail","storeFavourites","fork","takeLatest","type","action","select","movies","query","put","task","take","length","cancel","delay","call","fetch","response","Error","mapped","Search","map","raw","imdbID","name","Title","year","Number","Year","posterUrl","Poster","alert","detail","title","genre","Genre","released","Released","poster","plot","Plot","value","setItem","stringify","reducers","combineReducers","sagas","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","undefined","applyMiddleware","logger","run","SearchBar","props","className","inputClassName","placeholder","disabled","onChange","e","target","MovieBox","to","src","alt","Spinner","width","height","viewBox","xmlns","fill","fillRule","transform","stroke","strokeWidth","cx","cy","r","fillOpacity","attributeName","begin","dur","values","calcMode","repeatCount","MovieSearchContainer","connect","d","setSearchText","s","setPage","p","onClick","MovieDetailContainer","match","params","fetchMovie","React","useEffect","dateTime","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f014bff.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\n\nexport const history = createBrowserHistory({basename: '/omdb-frontend'})\n","import { actionCreatorFactory } from 'typescript-fsa'\n\nimport { IMovieThumbnail, IMovieDetail } from './movie-reducer'\n\nconst movieActionFactory = actionCreatorFactory('movie-search')\n\nexport const SET_SEARCH = movieActionFactory<string>('set-search')\n\nexport const SET_PAGE = movieActionFactory<number>('set-page')\n\nexport const FETCH_SEARCH_MOVIES = {\n    BEGIN: movieActionFactory<{query: string, page: number}>('BEGIN_FETCH_SEARCH_MOVIES'),\n    ERROR: movieActionFactory<Error>('ERROR_FETCH_SEARCH_MOVIES'),\n    SUCCESS: movieActionFactory<IMovieThumbnail[] | null>('SUCCESS_FETCH_SEARCH_MOVIES')\n}\n\nexport const FETCH_MOVIE_DETAIL = {\n    BEGIN: movieActionFactory<{id: string}>('BEGIN_FETCH_MOVIE_DETAIL'),\n    ERROR: movieActionFactory<Error>('ERROR_FETCH_MOVIE_DETAIL'),\n    SUCCESS: movieActionFactory<IMovieDetail | null>('SUCCESS_FETCH_MOVIE_DETAIL')\n}\n\nexport const SET_MOVIE_FAVOURITE = movieActionFactory<{movie: IMovieDetail}>('SET_MOVIE_FAVOURITE')\nexport const RESET_MOVIE_FAVOURITE = movieActionFactory<{movieId: string}>('RESET_MOVIE_FAVOURITE')\n","export const FAVOURITES_LS_KEY = 'favorited-movies'\n\nconsole.log(process.env.TEST_VAL)","import { reducerWithInitialState } from 'typescript-fsa-reducers'\nimport produce from 'immer'\n\nimport { SET_SEARCH, FETCH_SEARCH_MOVIES, SET_PAGE, FETCH_MOVIE_DETAIL, SET_MOVIE_FAVOURITE, RESET_MOVIE_FAVOURITE } from './movie-actions'\nimport { IApplicationStore } from './store'\nimport { lsget } from '../services/local-storage'\nimport { FAVOURITES_LS_KEY } from '../const'\n\nexport interface IMovieState {\n    search: string\n    loading: boolean\n    page: number\n    movieThumbnails: IMovieThumbnail[] | null\n\n    movieDetail: IMovieDetail | null\n\n    favourites: IMovieDetail[]\n}\n\nexport interface IMovieThumbnail {\n    name: string\n    posterUrl: string\n    year: number\n    id: string\n}\n\nexport interface IMovieDetail {\n    id: string\n    title: string\n    year: number\n    released: string\n    genre: string\n    poster: string\n    plot: string\n}\n\nconst initial: IMovieState = {\n    search: '',\n    page: 1,\n    loading: false,\n    movieThumbnails: [],\n    movieDetail: null,\n    favourites: lsget(FAVOURITES_LS_KEY) || []\n}\n\nexport const movieReducer = reducerWithInitialState(initial)\n    .case(SET_SEARCH, (state, payload) => produce(state, draft => {\n        draft.search = payload\n        draft.movieThumbnails = []\n        draft.page = 1\n    }))\n    .case(SET_PAGE, (state, payload) => produce(state, draft => {\n        draft.page = payload\n    }))\n    .case(FETCH_SEARCH_MOVIES.SUCCESS, (state, payload) => produce(state, draft => {\n        draft.movieThumbnails = payload\n        draft.loading = false\n    }))\n    .case(FETCH_MOVIE_DETAIL.SUCCESS, (state, payload) => produce(state, draft => {\n        draft.movieDetail = payload\n        draft.loading = false\n    }))\n    .case(FETCH_MOVIE_DETAIL.BEGIN, (state, payload) => produce(state, draft => {\n        draft.loading = false\n        draft.movieDetail = null\n    }))\n    .case(SET_MOVIE_FAVOURITE, (state, payload) => produce(state, draft => {\n        draft.favourites.push(payload.movie)\n    }))\n    .case(RESET_MOVIE_FAVOURITE, (state, payload) => produce(state, draft => {\n        draft.favourites.splice(draft.favourites.findIndex(v => v.id === payload.movieId), 1)\n    }))\n    .cases([FETCH_SEARCH_MOVIES.BEGIN], (state, payload) => produce(state, draft => {\n        draft.loading = true\n    }))\n    .cases([FETCH_SEARCH_MOVIES.ERROR, FETCH_MOVIE_DETAIL.ERROR], (state, payload) => produce(state, draft => {\n        draft.loading = false\n    }))\n\nexport const selectCurrentSearchQuery = () => (state: IApplicationStore) => state.movies.search\n\nexport const selectFavourites = () => (state: IApplicationStore) => state.movies.favourites","export type UpdateFunc = (o: Object) => Object\n\nexport function lsset(key: string, value: Object) {\n    localStorage.setItem(key, JSON.stringify(value))\n}\n\nexport function lsget<T>(key: string): T | null {\n    const json = localStorage.getItem(key)\n    return JSON.parse(json!)\n}","import { take, fork, cancel, delay, call, put, takeLatest, select } from 'redux-saga/effects'\n\nimport { SET_SEARCH, FETCH_SEARCH_MOVIES, SET_PAGE, FETCH_MOVIE_DETAIL, SET_MOVIE_FAVOURITE, RESET_MOVIE_FAVOURITE } from './movie-actions'\nimport { Action } from 'typescript-fsa'\nimport { IMovieThumbnail, selectCurrentSearchQuery, IMovieDetail, selectFavourites } from './movie-reducer'\nimport { history } from '../services/history'\nimport { lsset } from '../services/local-storage'\nimport { FAVOURITES_LS_KEY } from '../const'\n\nexport function* movieRootSaga() {\n  yield fork(setSearch)\n\n  yield takeLatest(FETCH_SEARCH_MOVIES.BEGIN.type, fetchSearchMovies)\n  yield takeLatest(FETCH_MOVIE_DETAIL.BEGIN.type, fetchMovieDetail)\n  yield takeLatest(SET_PAGE.type, nextPage)\n\n  yield takeLatest(SET_MOVIE_FAVOURITE.type, storeFavourites)\n  yield takeLatest(RESET_MOVIE_FAVOURITE.type, storeFavourites)\n}\n\nfunction* nextPage(action: Action<number>) {\n  const query = yield select(selectCurrentSearchQuery())\n\n  yield put(FETCH_SEARCH_MOVIES.BEGIN({query, page: action.payload}))\n}\n\nfunction* setSearch() {\n  let task = null\n  while (true) {\n    const { payload } = yield take(SET_SEARCH.type)\n    if (payload.length < 5) {\n      continue\n    }\n    if (task) {\n      yield cancel(task)\n    }\n    task = yield fork(debouncedSearch, payload)\n  }\n}\n\nfunction* debouncedSearch(search: string) {\n  yield delay(1200)\n  yield put(FETCH_SEARCH_MOVIES.BEGIN({query: search, page: 1}))\n}\n\nfunction* fetchSearchMovies(action: Action<{query: string, page: number}>) {\n  try {\n\n    const response = yield call(fetch, `https://www.omdbapi.com/?s=${action.payload.query}&page=${action.payload.page}&apikey=82342796`)\n    const json = yield response.json()\n    if (json.Error) {\n      yield put(FETCH_SEARCH_MOVIES.SUCCESS(null))\n      return\n    }\n\n    const mapped = json.Search.map((raw: any) => ({\n      id: raw.imdbID,\n      name: raw.Title,\n      year: Number(raw.Year),\n      posterUrl: raw.Poster === 'N/A' ? null : raw.Poster\n    }) as IMovieThumbnail)\n\n    yield put(FETCH_SEARCH_MOVIES.SUCCESS(mapped))\n  } catch(e) {\n    yield put(FETCH_SEARCH_MOVIES.ERROR(e))\n  }\n}\n\nfunction* fetchMovieDetail(action: Action<{id: string}>) {\n  try {\n    const response: Response = yield call(fetch, `https://www.omdbapi.com/?apikey=82342796&i=${action.payload.id}`)\n\n    const json = yield response.json()\n\n    if (json.Error) {\n      yield put(FETCH_MOVIE_DETAIL.SUCCESS(null))\n      alert(`Unable to display page (${json.Error})`)\n      history.push('/')\n      return\n    }\n    console.log(json)\n    const detail: IMovieDetail = {\n      id: json.imdbID,\n      title: json.Title,\n      genre: json.Genre,\n      released: json.Released,\n      year: Number(json.Year),\n      poster: json.Poster,\n      plot: json.Plot\n    }\n\n    yield put(FETCH_MOVIE_DETAIL.SUCCESS(detail))\n  } catch (e) {\n    yield put(FETCH_MOVIE_DETAIL.ERROR(e))\n  }\n}\n\nfunction* storeFavourites() {\n  const favourites = yield select(selectFavourites())\n  lsset(FAVOURITES_LS_KEY, favourites)\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { fork } from 'redux-saga/effects'\nimport createSagaMiddleware from 'redux-saga'\nimport logger from 'redux-logger'\n\nimport { IMovieState, movieReducer } from './movie-reducer'\nimport { movieRootSaga } from './movie-saga'\n\nexport interface IApplicationStore {\n    movies: IMovieState\n}\n\nconst reducers = combineReducers({\n    movies: movieReducer\n})\n\nconst sagas = function* rootSaga() {\n    yield fork(movieRootSaga)\n}\n\nconst sagaMiddleware = createSagaMiddleware()\n\nexport const store = createStore(reducers, undefined, applyMiddleware(logger, sagaMiddleware))\n\nsagaMiddleware.run(sagas)\n","import React from 'react'\n\nimport './search-bar.scss';\n\ninterface IProps {\n  value: string\n  inputClassName?: string\n  placeholder?: string;\n  disabled?: boolean\n  onChange: (s: string) => void\n}\n\nexport const SearchBar = (props: IProps) => {\n  return <div className='search-bar'>\n    <input\n      className={`input ${props.inputClassName || ''}`}\n      type='text'\n      value={props.value}\n      placeholder={props.placeholder}\n      disabled={props.disabled}\n      onChange={e => !props.disabled && props.onChange(e.target.value)}\n    />\n  </div>\n}\n","import React from 'react'\n\nimport './movie-box.scss'\nimport { Link } from 'react-router-dom'\n\ninterface IProps {\n    name: string\n    posterUrl: string\n    id: string\n}\n\nexport const MovieBox = (props: IProps) => {\n    return <div className='movie-box box'>\n        <Link to={`/movie/${props.id}`}>\n            <div>\n                <strong>{props.name}</strong>\n            </div>\n            <div className=''>\n                <img src={props.posterUrl} alt='Poster' />\n            </div>\n        </Link>\n    </div>\n}","import React from 'react'\n\nexport const Spinner = () => {\n  // <!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->\n  return <svg width=\"58\" height=\"58\" viewBox=\"0 0 58 58\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g fill=\"#ddd\" fillRule=\"evenodd\">\n      <g transform=\"translate(2 1)\" stroke=\"#FFF\" strokeWidth=\"1.5\">\n        <circle cx=\"42.601\" cy=\"11.462\" r=\"5\" fillOpacity=\"1\" fill=\"#fff\">\n          <animate attributeName=\"fill-opacity\"\n            begin=\"0s\" dur=\"1.3s\"\n            values=\"1;0;0;0;0;0;0;0\" calcMode=\"linear\"\n            repeatCount=\"indefinite\" />\n        </circle>\n        <circle cx=\"49.063\" cy=\"27.063\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\n          <animate attributeName=\"fill-opacity\"\n            begin=\"0s\" dur=\"1.3s\"\n            values=\"0;1;0;0;0;0;0;0\" calcMode=\"linear\"\n            repeatCount=\"indefinite\" />\n        </circle>\n        <circle cx=\"42.601\" cy=\"42.663\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\n          <animate attributeName=\"fill-opacity\"\n            begin=\"0s\" dur=\"1.3s\"\n            values=\"0;0;1;0;0;0;0;0\" calcMode=\"linear\"\n            repeatCount=\"indefinite\" />\n        </circle>\n        <circle cx=\"27\" cy=\"49.125\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\n          <animate attributeName=\"fill-opacity\"\n            begin=\"0s\" dur=\"1.3s\"\n            values=\"0;0;0;1;0;0;0;0\" calcMode=\"linear\"\n            repeatCount=\"indefinite\" />\n        </circle>\n        <circle cx=\"11.399\" cy=\"42.663\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\n          <animate attributeName=\"fill-opacity\"\n            begin=\"0s\" dur=\"1.3s\"\n            values=\"0;0;0;0;1;0;0;0\" calcMode=\"linear\"\n            repeatCount=\"indefinite\" />\n        </circle>\n        <circle cx=\"4.938\" cy=\"27.063\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\n          <animate attributeName=\"fill-opacity\"\n            begin=\"0s\" dur=\"1.3s\"\n            values=\"0;0;0;0;0;1;0;0\" calcMode=\"linear\"\n            repeatCount=\"indefinite\" />\n        </circle>\n        <circle cx=\"11.399\" cy=\"11.462\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\n          <animate attributeName=\"fill-opacity\"\n            begin=\"0s\" dur=\"1.3s\"\n            values=\"0;0;0;0;0;0;1;0\" calcMode=\"linear\"\n            repeatCount=\"indefinite\" />\n        </circle>\n        <circle cx=\"27\" cy=\"5\" r=\"5\" fillOpacity=\"0\" fill=\"#fff\">\n          <animate attributeName=\"fill-opacity\"\n            begin=\"0s\" dur=\"1.3s\"\n            values=\"0;0;0;0;0;0;0;1\" calcMode=\"linear\"\n            repeatCount=\"indefinite\" />\n        </circle>\n      </g>\n    </g>\n  </svg>\n}","import { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\n\nimport { IApplicationStore } from \"../redux/store\"\nimport { MovieSearchPage } from \"./movie-search-page\"\nimport { SET_SEARCH, SET_PAGE } from \"../redux/movie-actions\"\n\ntype IStateProps = ReturnType<typeof mapStateToProps>\ntype IDispatchProps = ReturnType<typeof mapDispatchToProps>\ntype IOwnProps = {}\n\nexport type IMovieSearchProps =  IStateProps & IDispatchProps & IOwnProps\n\nconst mapStateToProps = (state: IApplicationStore) => ({\n  ...state.movies\n})\n\nconst mapDispatchToProps = (d: Dispatch) => ({\n  setSearchText: (s: string) => d(SET_SEARCH(s)),\n  setPage: (p: number) => d(SET_PAGE(p))\n})\n\nexport const MovieSearchContainer =\n  connect<IStateProps, IDispatchProps, IOwnProps, IApplicationStore>(mapStateToProps, mapDispatchToProps)(MovieSearchPage)\n","import React from 'react'\n\nimport { IMovieSearchProps } from './movie-search-container'\nimport { SearchBar } from '../components/search-bar'\nimport { MovieBox } from '../components/movie-box'\nimport { Spinner } from '../components/spinner'\n\nimport './movie-search-page.scss'\n\nexport const MovieSearchPage = (props: IMovieSearchProps) => {\n  return <div className='movies-search-page'>\n    <section className=\"hero is-info\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <div className=\"card\">\n            <div className=\"card-content\">\n              <div className=\"content\">\n                <div className=\"control\">\n                  <SearchBar\n                    value={props.search}\n                    inputClassName={`is-large ${props.movieThumbnails === null ? 'is-danger' : ''}`}\n                    placeholder='Enter movie title'\n                    onChange={props.setSearchText}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section className='container movie-box-container'>\n      {!props.loading &&\n        props.movieThumbnails &&\n        !!props.movieThumbnails.length &&\n        props.page > 1 &&\n        <button className='button primary next-button'\n          onClick={() => props.setPage(props.page - 1)}\n        >Prev &larr;</button>}\n      &nbsp;\n      {!props.loading &&\n        props.movieThumbnails &&\n        !!props.movieThumbnails.length &&\n        <button className='button primary next-button'\n          onClick={() => props.setPage(props.page + 1)}\n        >Next &rarr;</button>}\n\n\n\n      {props.loading && <Spinner />}\n      <div className=\"columns is-multiline\">\n\n        {!props.loading &&\n          props.movieThumbnails &&\n          props.movieThumbnails.map(movie =>\n            <div className='column is-mobile-full is-one-fifth' key={movie.id}>\n              <MovieBox\n                name={movie.name}\n                id={movie.id}\n                posterUrl={movie.posterUrl}\n              />\n            </div>\n          )}\n\n      </div>\n    </section>\n  </div>\n}\n","import { connect } from \"react-redux\"\nimport { Dispatch } from \"redux\"\n\nimport { IApplicationStore } from \"../redux/store\"\nimport { MovieDetailPage } from \"./movie-detail-page\"\nimport { RouteComponentProps } from \"react-router-dom\"\nimport { FETCH_MOVIE_DETAIL } from \"../redux/movie-actions\"\n\ntype IStateProps = ReturnType<typeof mapStateToProps>\ntype IDispatchProps = ReturnType<typeof mapDispatchToProps>\ntype IOwnProps = {} & RouteComponentProps<{id: string}>\n\nexport type IMovieDetailProps =  IStateProps & IDispatchProps & IOwnProps\n\nconst mapStateToProps = (state: IApplicationStore, props: IOwnProps) => ({\n  id: props.match.params.id,\n  movie: state.movies.movieDetail,\n  loading: state.movies.loading\n})\n\nconst mapDispatchToProps = (d: Dispatch) => ({\n  fetchMovie: (id: string) => d(FETCH_MOVIE_DETAIL.BEGIN({id}))\n})\n\nexport const MovieDetailContainer =\n  connect<IStateProps, IDispatchProps, IOwnProps, IApplicationStore>(mapStateToProps, mapDispatchToProps)(MovieDetailPage)","import React from 'react'\nimport { IMovieDetailProps } from './movie-detail-container'\nimport { Spinner } from '../components/spinner'\n\nimport './movie-detail-page.scss';\n\nexport const MovieDetailPage = ({\n  id,\n  movie,\n  loading,\n\n  fetchMovie\n}: IMovieDetailProps) => {\n\n  React.useEffect(() => {\n    fetchMovie(id)\n  }, [id, fetchMovie])\n\n  return <div className='container movie-detail-page'>\n    <div className='columns'>\n      <div className='column is-4' />\n      {loading && <div className='column is-4'>\n        <Spinner />\n      </div>\n      }\n      {!loading && <div className='card favourite-card column is-4'>\n        <div className='card-image'>\n          <figure className='image is-3by4'>\n            <img src={movie?.poster} alt='Poster' />\n          </figure>\n        </div>\n        <div className='card-content'>\n          <div className='media'>\n            <div className='media-content'>\n              <p className='title is-4'>{movie?.title} <span className='favourite-button'>★</span></p>\n              <p className='subtitle'>{movie?.year}</p>\n            </div>\n          </div>\n\n          <div className='content'>\n            <p>{movie?.genre}</p>\n            <p>{movie?.plot}</p>\n            <br />\n            <time dateTime='2016-1-1'>{movie?.released}</time>\n          </div>\n        </div>\n      </div>}\n    </div>\n  </div>\n}\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { Router, Switch, Route } from 'react-router-dom'\nimport { history } from './services/history'\n\nimport { store } from './redux/store'\nimport { MovieSearchContainer } from './pages/movie-search-container'\nimport { MovieDetailContainer } from './pages/movie-detail-container'\n\nconst App = () => {\n  return <Provider store={store}>\n    <div className='page'>\n      <section>\n        <h1 className='is-size-1'>OMDB - Demo app</h1>\n      </section>\n      <Router history={history}>\n        <Switch>\n          <Route path='/' exact={true} component={MovieSearchContainer} />\n          <Route path='/movie/:id' exact={true} component={MovieDetailContainer} />\n        </Switch>\n      </Router>\n    </div>\n  </Provider>\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nimport './styles/main.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}